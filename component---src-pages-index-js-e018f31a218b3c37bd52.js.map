{"version":3,"file":"component---src-pages-index-js-e018f31a218b3c37bd52.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/full-screen-toggle.js","webpack://gatsby-starter-blog/./src/components/return-home.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\n\nfunction FullScreenToggle() {\n  const [isFullScreen, setIsFullScreen] = useState(false)\n\n  useEffect(() => {\n    const toggleFullScreen = () => {\n      if (\n        !isFullScreen &&\n        typeof document !== \"undefined\" &&\n        !document.fullscreenElement\n      ) {\n        document.documentElement.requestFullscreen().then(() => {\n          setIsFullScreen(true)\n        })\n      } else if (\n        typeof document !== \"undefined\" &&\n        document.fullscreenElement\n      ) {\n        document.exitFullscreen().then(() => {\n          setIsFullScreen(false)\n        })\n      }\n    }\n\n    const handleKeyDown = event => {\n      if (event.key === \"f\") {\n        toggleFullScreen()\n      }\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown)\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown)\n    }\n  }, [isFullScreen])\n\n  return null\n}\n\nexport default FullScreenToggle\n","import { useEffect } from \"react\"\nimport { navigate } from \"gatsby\"\n\nconst HomeShortcut = () => {\n  useEffect(() => {\n    const handleKeyPress = e => {\n      // remove that?\n      if (e.key === \"h\" && typeof document !== \"undefined\") {\n        navigate(\"/\")\n      }\n    }\n    if (typeof document !== \"undefined\") {\n      document.addEventListener(\"keydown\", handleKeyPress)\n    }\n    return () => {\n      if (typeof document !== \"undefined\") {\n        document.removeEventListener(\"keydown\", handleKeyPress)\n      }\n    }\n  }, [])\n\n  return null\n}\n\nexport default HomeShortcut\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport FullScreenToggle from \"../components/full-screen-toggle\"\nimport HomeShortcut from \"./return-home\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home print:hidden\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <>\n      <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n        <header className=\"global-header\">{header}</header>\n        <main>{children}</main>\n      </div>\n      <FullScreenToggle />\n      <HomeShortcut />\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <p className=\"prose\">\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <>\n      <Layout location={location} title={siteTitle}>\n        <ol style={{ listStyle: `none` }}>\n          {posts.map(post => {\n            const title = post.frontmatter.title || post.fields.slug\n\n            return (\n              <li key={post.fields.slug}>\n                <article\n                  className=\"post-list-item\"\n                  itemScope\n                  itemType=\"http://schema.org/Article\"\n                >\n                  <header className=\"prose prose-a:no-underline\">\n                    <h2>\n                      <Link to={post.fields.slug} itemProp=\"url\">\n                        <span\n                          itemProp=\"headline\"\n                          className=\"transition duration-200 hover:underline\"\n                        >\n                          {title}\n                        </span>\n                      </Link>\n                    </h2>\n                    <small className=\"italic\">{post.frontmatter.date}</small>\n                  </header>\n                  <section className=\"\">\n                    <p\n                      dangerouslySetInnerHTML={{\n                        __html: post.frontmatter.description || post.excerpt,\n                      }}\n                      itemProp=\"description\"\n                    />\n                  </section>\n                </article>\n              </li>\n            )\n          })}\n        </ol>\n      </Layout>\n    </>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"oeyoews\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["isFullScreen","setIsFullScreen","useState","useEffect","handleKeyDown","event","key","document","fullscreenElement","exitFullscreen","then","documentElement","requestFullscreen","window","addEventListener","removeEventListener","HomeShortcut","handleKeyPress","e","navigate","_ref","location","title","children","isRootPath","__PATH_PREFIX__","pathname","header","React","className","Link","to","FullScreenToggle","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","_data$site$siteMetada","data","siteTitle","posts","allMarkdownRemark","nodes","length","Layout","style","listStyle","map","post","frontmatter","fields","slug","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","excerpt","Head","Seo"],"sourceRoot":""}