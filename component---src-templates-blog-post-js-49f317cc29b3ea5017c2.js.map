{"version":3,"file":"component---src-templates-blog-post-js-49f317cc29b3ea5017c2.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/full-screen-toggle.js","webpack://gatsby-starter-blog/./src/components/return-home.js","webpack://gatsby-starter-blog/./src/components/progressbar.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/components/Gravatar.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\n\nfunction FullScreenToggle() {\n  const [isFullScreen, setIsFullScreen] = useState(false)\n\n  useEffect(() => {\n    const toggleFullScreen = () => {\n      if (\n        !isFullScreen &&\n        typeof document !== \"undefined\" &&\n        !document.fullscreenElement\n      ) {\n        document.documentElement.requestFullscreen().then(() => {\n          setIsFullScreen(true)\n        })\n      } else if (\n        typeof document !== \"undefined\" &&\n        document.fullscreenElement\n      ) {\n        document.exitFullscreen().then(() => {\n          setIsFullScreen(false)\n        })\n      }\n    }\n\n    const handleKeyDown = event => {\n      if (event.key === \"f\") {\n        toggleFullScreen()\n      }\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown)\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown)\n    }\n  }, [isFullScreen])\n\n  return null\n}\n\nexport default FullScreenToggle\n","import { useEffect } from \"react\"\nimport { navigate } from \"gatsby\"\n\nconst HomeShortcut = () => {\n  useEffect(() => {\n    const handleKeyPress = e => {\n      // remove that?\n      if (e.key === \"h\" && typeof document !== \"undefined\") {\n        navigate(\"/\")\n      }\n    }\n    if (typeof document !== \"undefined\") {\n      document.addEventListener(\"keydown\", handleKeyPress)\n    }\n    return () => {\n      if (typeof document !== \"undefined\") {\n        document.removeEventListener(\"keydown\", handleKeyPress)\n      }\n    }\n  }, [])\n\n  return null\n}\n\nexport default HomeShortcut\n","import React, { useEffect } from \"react\"\n\nfunction ProgressBar() {\n  useEffect(() => {\n    function progressbarListener() {\n      if (typeof window !== \"undefined\" && typeof document !== \"undefined\") {\n        window.addEventListener(\"scroll\", function () {\n          const pageHeight = window.document.documentElement.scrollHeight\n          const windowHeight = window.innerHeight\n\n          const scrollTop =\n            window.pageYOffset || document.documentElement.scrollTop\n          const denominator = pageHeight - windowHeight\n          const scrollProgress =\n            denominator !== 0 ? (scrollTop / denominator) * 100 : 0\n          const progressBar = document.getElementById(\"page-progress-bar\")\n          progressBar.style.width = scrollProgress + \"%\"\n        })\n      }\n    }\n    progressbarListener()\n  }, [])\n\n  return (\n    <div id=\"page-progress\">\n      <div id=\"page-progress-bar\"></div>\n    </div>\n  )\n}\n\nexport default ProgressBar\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport FullScreenToggle from \"./full-screen-toggle\"\nimport HomeShortcut from \"./return-home\"\nimport ProgressBar from \"./progressbar\"\n// import Gravatar from \"./Gravatar\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        {/* <Gravatar /> */}\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home print:hidden\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <>\n      <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n        <header className=\"global-header\">{header}</header>\n        <main>{children}</main>\n      </div>\n      <FullScreenToggle />\n      <HomeShortcut />\n      <ProgressBar />\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\n\nexport default function Gravatar() {\n  return (\n    <span>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/oeyoews\"\n      >\n        <img\n          src=\"https://q1.qlogo.cn/g?b=qq&nk=2956398608&s=100\"\n          className=\"mx-2 h-4 rounded-full align-bottom\"\n          alt=\"avatar\"\n        />\n      </a>\n    </span>\n  )\n}\n\n// or use md5\n/* import md5 from 'md5';\n\nfunction Gravatar(props) {\n  const emailHash = md5(props.email.trim().toLowerCase());\n  const gravatarUrl = `https://www.gravatar.com/avatar/${emailHash}?s=${props.size}&d=${props.defaultImg}`;\n\n  return (\n    <img\n      src={gravatarUrl}\n      alt=\"Gravatar\"\n      width={props.size}\n      height={props.size}\n      className={props.className}\n    />\n  );\n}\n\nexport default Gravatar; */\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Gravatar from \"../components/Gravatar\"\n\nconst BlogPostTemplate = ({\n  data: { site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post prose prose-indigo prose-blockquote:not-italic\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header className=\"\">\n          <h2\n            itemProp=\"headline\"\n            className=\"flex items-center justify-center print:hidden\"\n          >\n            {post.frontmatter.title}\n          </h2>\n          <small className=\"flex items-center justify-center italic\">\n            {post.frontmatter.date && <Gravatar />}\n            {post.frontmatter.date}\n          </small>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n      </article>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($id: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n"],"names":["isFullScreen","setIsFullScreen","useState","useEffect","handleKeyDown","event","key","document","fullscreenElement","exitFullscreen","then","documentElement","requestFullscreen","window","addEventListener","removeEventListener","HomeShortcut","handleKeyPress","e","navigate","pageHeight","scrollHeight","windowHeight","innerHeight","scrollTop","pageYOffset","denominator","scrollProgress","getElementById","style","width","React","id","_ref","location","title","children","isRootPath","__PATH_PREFIX__","pathname","header","className","Link","to","FullScreenToggle","ProgressBar","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","Gravatar","target","rel","href","src","alt","Head","_ref2","data","markdownRemark","post","Seo","frontmatter","excerpt","siteTitle","Layout","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}